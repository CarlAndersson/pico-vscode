{
  "name": "raspberry-pi-pico",
  "displayName": "Raspberry Pi Pico",
  "description": "The official VS Code extension for Raspberry Pi Pico development. It includeds serveral features to simplify project creation and deployment.",
  "version": "0.1.0",
  "author": "paulober",
  "publisher": "paulober",
  "license": "MPL-2.0",
  "homepage": "https://github.com/paulober/vscode-raspberry-pi-pico/blob/main/README.md",
  "bugs": {
    "url": "https://github.com/paulober/vscode-raspberry-pi-pico/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/paulober/vscode-raspberry-pi-pico"
  },
  "engines": {
    "vscode": "^1.79.2"
  },
  "keywords": [
    "raspberry",
    "pi",
    "raspberry pi",
    "pico",
    "pico w",
    "raspberry pi pico",
    "raspberry pi pico w",
    "pico sdk"
  ],
  "categories": [
    "Snippets",
    "Other"
  ],
  "main": "./dist/extension.cjs",
  "markdown": "github",
  "minimumNodeVersion": 16,
  "capabilities": {
    "virtualWorkspaces": {
      "supported": false,
      "description": "Raspberry Pi Pico extension is intended to be used localy."
    },
    "untrustedWorkspaces": {
      "supported": false,
      "description": "Raspberry Pi Pico extension is intended to be used in trusted workspaces."
    }
  },
  "activationEvents": [
    "workspaceContains:**/pico_sdk_import.cmake"
  ],
  "contributes": {
    "commands": [
      {
        "command": "raspberry-pi-pico.newProject",
        "title": "New Pico Project",
        "category": "Raspberry Pi Pico"
      },
      {
        "command": "raspberry-pi-pico.switchSDK",
        "title": "Switch Pico SDK",
        "category": "Raspberry Pi Pico",
        "enablement": "inQuickOpen"
      },
      {
        "command": "raspberry-pi-pico.getSDKPath",
        "title": "Get Pico SDK Path",
        "category": "Raspberry Pi Pico",
        "enablement": "false"
      },
      {
        "command": "raspberry-pi-pico.getToolchainPath",
        "title": "Get ARM Toolchain Path",
        "category": "Raspberry Pi Pico",
        "enablement": "false"
      }
    ],
    "configuration": {
      "title": "Raspberry Pi Pico Extension",
      "properties": {
        "raspberry-pi-pico.sdk": {
          "type": "string",
          "pattern": "^$|^\\d+\\.\\d+\\.\\d+$",
          "patternErrorMessage": "The version must be in the format MAJOR.MINOR.PATCH (e.g. 1.5.1)",
          "default": "",
          "description": "Pico SDK selected for the project [requires registration of the SDK and the corresponding toolchain in the system (on Windows in the registry and on macOS and Linux in an external configuration file)]"
        },
        "raspberry-pi-pico.sdkPath": {
          "type": "string",
          "default": "",
          "description": "Path to the Pico SDK root"
        },
        "raspberry-pi-pico.toolchainPath": {
          "type": "string",
          "default": "",
          "markdownDescription": "Path to the ARM Toolchain (folder containing compiler executable; so if installed as `/usr/bin/arm-none-eabi-gcc`, set this to `/usr/bin`; if installed as `C:\\arm-toolchain\\bin\\arm-none-eabi-gcc.exe`, set this to `C:\\arm-toolchain\\bin`)"
        },
        "raspberry-pi-pico.cmakePath": {
          "type": "string",
          "default": "",
          "description": "Path to the CMake executable [no spaces]"
        },
        "raspberry-pi-pico.python3Path": {
          "type": "string",
          "default": "",
          "description": "Path to the Python executable [no spaces]"
        },
        "raspberry-pi-pico.ninjaPath": {
          "type": "string",
          "default": "",
          "description": "Path to Ninja executable [no spaces]"
        },
        "raspberry-pi-pico.cmakeAutoConfigure": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Automatically run configure when opening a Pico project"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "postcompile-unix": "sed -i '' 's/require(\\x27vscode-windows-registry\\x27)/require(\\x27..\\/vendor\\/vscode-windows-registry\\x27)/g' dist/extension.cjs",
    "postcompile-win": "Powershell -ExecutionPolicy Bypass .\\\\scripts\\\\replace.ps1",
    "postcompile": "node -e \"process.platform === 'win32' ? require('child_process').execSync('yarn run postcompile-win') : require('child_process').execSync('yarn run postcompile-unix')\"",
    "compile": "rollup -c",
    "watch": "rollup -cw",
    "package": "rollup -c --environment BUILD:production --sourcemap hidden",
    "lint": "eslint src --ext mts",
    "test": "yarn run lint"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^25.0.2",
    "@rollup/plugin-node-resolve": "^15.1.0",
    "@rollup/plugin-run": "^3.0.1",
    "@rollup/plugin-typescript": "^11.1.2",
    "@types/node": "20.4.0",
    "@types/semver": "^7.5.0",
    "@types/vscode": "^1.79.1",
    "@types/which": "^3.0.0",
    "@typescript-eslint/eslint-plugin": "^5.61.0",
    "@typescript-eslint/parser": "^5.61.0",
    "eslint": "^8.44.0",
    "eslint-config-prettier": "^8.8.0",
    "rollup": "^3.26.2",
    "tslib": "^2.6.0",
    "typescript": "^5.1.6"
  },
  "dependencies": {
    "semver": "^7.5.3",
    "vscode-windows-registry": "file:./vendor/vscode-windows-registry",
    "which": "^3.0.1"
  },
  "packageManager": "yarn@3.6.1"
}
